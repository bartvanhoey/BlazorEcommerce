@page "/"
@page "/{categoryUrl}"
@page "/search/{searchText}/{page:int}"


@inject IProductService ProductService


<PageTitle>My Shop</PageTitle>

@if (SearchText == null && CategoryUrl == null)
{
    <FeaturedProducts Products="@Products" />
}
else
{
    <ProductList Products=@Products />
}


@code {
    [Parameter]
    public string? CategoryUrl { get; set; } = null;

    [Parameter]
    public string? SearchText { get; set; } = null;

    [Parameter]
    public int Page { get; set; }


    public List<Product> Products = new List<Product>();

    protected override async Task OnParametersSetAsync()
    {

        if (SearchText != null)
        {
            var result = await ProductService.SearchProductsAsync(SearchText, Page);
            if (result.Products != null && result.Products.Count > 0)
            {
                Products = result.Products;
            }
            else
            {
                Products = new List<Product>();
            }
        }
        else
        {
            Products = await ProductService.GetProductsAsync(CategoryUrl);
        }
    }
}